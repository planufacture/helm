{{- if .Values.mongo.enabled}}
{{- $context := merge (dict "key" "mongo") $ }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "planufacture.fullname" $context }}
  labels:
    {{- include "planufacture.labels" $context | nindent 4 }}
spec:
  revisionHistoryLimit: 3
  replicas: 1    # or we can even skip this, just want to test the HAP below, otherwise start with 3 lets say
  selector:
    matchLabels:
      {{- include "planufacture.selectorLabels" $context | nindent 6 }}
  serviceName: mongo
  template:
    metadata:
      labels:
        {{- include "planufacture.labels" $context | nindent 8 }}
        {{- with $.Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        runAsUser: 999
        runAsNonRoot: true
        fsGroup: 999
    {{- with .Values.mongo.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      initContainers:
        - name: setup-keyfile
          image: mongo:8-noble
          command:
            - /bin/bash
            - -c
            - |
              cp /keyfile-secret/mongodb-keyfile /data/keyfile/mongodb-keyfile
              chmod 400 /data/keyfile/mongodb-keyfile
              chown 999:999 /data/keyfile/mongodb-keyfile
          volumeMounts:
          - mountPath: /data/keyfile
            name: mongodb-keyfile
          - mountPath: /keyfile-secret
            name: mongodb-keyfile-secret
            readOnly: true
        - name: mongo-init
          image: mongo:8-noble
          command:
            - /bin/bash
            - -c
            - |
              until mongosh --host localhost:27017 --username ${MONGO_INITDB_ROOT_USERNAME} --password ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --eval "db.adminCommand('ping')" &>/dev/null; do
                echo "Waiting for MongoDB to be ready..."
                sleep 2
              done
              echo "MongoDB is ready, initializing replica set..."
              mongosh --host localhost:27017 --username ${MONGO_INITDB_ROOT_USERNAME} --password ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --eval '
                rs.status().ok === 0 && rs.initiate({
                  _id: "rs0",
                  members: [{ _id: 0, host: "{{ include "planufacture.fullname" $context }}-0.mongo:27017" }]
                })
              '
              echo "Replica set initialization complete"
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: {{ .Values.mongo.username }}
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "planufacture.fullname" $context }}
                key: mongo-root-password
      containers:
        - name: mongo
          image: mongo:8-noble
          imagePullPolicy: IfNotPresent
          command: [ "mongod" ]
          args: [ "--replSet", "rs0", "--bind_ip_all", "--keyFile", "/data/keyfile/mongodb-keyfile" ]
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: {{ .Values.mongo.username }}
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "planufacture.fullname" $context }}
                key: mongo-root-password
          ports:
          - containerPort: 27017
            name: mongo
          volumeMounts:
          - mountPath: /data/db
            name: {{ include "planufacture.fullname" $context }}-data
          - mountPath: /data/keyfile
            name: mongodb-keyfile
          resources:
{{ toYaml .Values.mongo.resources | indent 12 }}
      volumes:
        - name: mongodb-keyfile
          emptyDir: {}
        - name: mongodb-keyfile-secret
          secret:
            secretName: {{ include "planufacture.fullname" $context }}
            items:
            - key: mongodb-keyfile
              path: mongodb-keyfile
            defaultMode: 0400
  volumeClaimTemplates:
    - metadata:
        name: {{ include "planufacture.fullname" $context }}-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: gp3-xfs-backup
        resources:
          requests:
            storage: {{ .Values.mongo.storage | default "25Gi" }}
{{- end }}
